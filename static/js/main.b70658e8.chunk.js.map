{"version":3,"sources":["components/CharCard/CharCard.js","context/context.js","components/Loading/Loading.js","components/List/List.js","utils/hooks/useCharacters.js","components/CharInfo/CharInfo.js","utils/reducer.js","App.js","index.js"],"names":["CharCard","character","Card","style","width","marginTop","Img","variant","src","image","Body","display","justifyContent","to","id","name","Context","createContext","Loading","Spinner","position","top","right","animation","List","dispatch","useContext","useState","page","setPage","characters","setCharacters","error","setError","loading","setLoading","useEffect","axios","get","then","res","data","results","catch","e","useCharacters","type","payload","dataLength","length","next","hasMore","flexDirection","color","map","CharInfo","state","useParams","searchChar","find","char","height","alignItems","Title","ListGroup","className","ListGroupItem","status","gender","location","reducer","action","App","useReducer","Provider","value","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b70658e8.chunk.js","sourcesContent":["import Card from \"react-bootstrap/Card\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Link } from \"react-router-dom\";\n\nfunction CharCard({ character={} }) {\n  return (\n    <Card style={{ width: \"16rem\", marginTop: \"2rem\" }}>\n      <Card.Img variant=\"top\" src={character.image} />\n      <Card.Body style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <Link to={`/${character.id}`}>{character.name} </Link>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default CharCard;\n","import { createContext } from 'react';\n\nexport const Context = createContext(null)\n","import Spinner from \"react-bootstrap/Spinner\";\n\nfunction Loading() {\n  return (\n    <Spinner\n      style={{ position: \"absolute\", top: \"50%\", right: \"50%\" }}\n      animation=\"border\"\n      variant=\"light\"\n    />\n  );\n}\n\nexport default Loading;\n","import { useContext, useEffect, useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport CharCard from \"../CharCard/CharCard\";\nimport { Context } from \"../../context/context\";\nimport Loading from \"../Loading/Loading\";\nimport useCharacters from \"../../utils/hooks/useCharacters\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nfunction List() {\n  const { dispatch } = useContext(Context);\n  const [page, setPage] = useState(1);\n  const [characters, error, loading] = useCharacters(page);\n  useEffect(() => {\n    dispatch({ type: \"INIT_CHARACTERS\", payload: characters });\n  }, [page, characters, dispatch]);\n\n  return (\n    <InfiniteScroll\n      dataLength={characters.length}\n      next={() => setPage(page + 1)}\n      hasMore={true}\n    >\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n        {error && (\n          <p\n            style={{\n              color: \"white\",\n              position: \"absolute\",\n              top: \"50%\",\n              right: \"50%\",\n            }}\n          >\n            {error}\n          </p>\n        )}\n        {loading && <Loading />}\n        {characters &&\n          characters.map((character) => (\n            <CharCard character={character} key={character.id} />\n          ))}\n      </div>\n    </InfiniteScroll>\n  );\n}\n\nexport default List;\n","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nexport default function useCharacters(page) {\n  const [characters, setCharacters] = useState([]);\n  const [error, setError] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    axios\n      .get(`https://rickandmortyapi.com/api/character/?page=${page}`)\n      .then((res) => {\n        setCharacters([...characters, ...res.data.results]);\n        setLoading(false);\n      })\n      .catch((e) => setError(\"Characters were not unloaded!\"));\n  }, [page]);\n\n  return [characters, setCharacters, error, loading];\n}\n","import Card from \"react-bootstrap/Card\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport ListGroupItem from \"react-bootstrap/ListGroupItem\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Context } from \"../../context/context\";\nimport { Link } from \"react-router-dom\";\n\nfunction CharInfo() {\n  const { state } = useContext(Context);\n  const { id } = useParams();\n  const searchChar = state.find((char) => char.id == id);\n  return (\n    <>\n      {searchChar && (\n        <Card style={{ width: \"20rem\", marginTop: \"2rem\" }}>\n          <Card.Img variant=\"top\" src={searchChar.image} />\n          <Card.Body\n            style={{\n              height: \"3rem\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <Card.Title>{searchChar.name}</Card.Title>\n          </Card.Body>\n          <ListGroup className=\"list-group-flush\">\n            <ListGroupItem>Status: \"{searchChar.status}\"</ListGroupItem>\n            <ListGroupItem>Gender: \"{searchChar.gender}\"</ListGroupItem>\n            <ListGroupItem>\n              Location: \"{searchChar.location.name}\"\n            </ListGroupItem>\n          </ListGroup>\n          <Card.Body>\n            <Link to=\"/\">Back</Link>\n          </Card.Body>\n        </Card>\n      )}\n    </>\n  );\n}\n\nexport default CharInfo;\n","const reducer = (state, action) => {\n  switch (action.type) {\n    case \"INIT_CHARACTERS\":\n      return [...state, ...action.payload];\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import List from \"./components/List/List\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport CharInfo from \"./components/CharInfo/CharInfo\";\nimport { Context } from \"./context/context\";\nimport { useReducer } from \"react\";\nimport reducer from \"./utils/reducer\";\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, []);\n  return (\n    <BrowserRouter>\n      <Context.Provider value={{ state, dispatch }}>\n        <Switch>\n          <Route exact path=\"/\">\n            <List />\n          </Route>\n\n          <Route path=\"/:id\">\n            <CharInfo />\n          </Route>\n        </Switch>\n      </Context.Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}